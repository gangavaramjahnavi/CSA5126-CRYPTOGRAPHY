#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

#define ALPHABET_SIZE 26

char *encrypt(char *plaintext, int *key, int key_len) {
    int text_len = strlen(plaintext);
    char *ciphertext = (char *)malloc((text_len + 1) * sizeof(char));

    for (int i = 0; i < text_len; i++) {
        if (isalpha(plaintext[i])) {
            int shift = key[i % key_len];
            char base = isupper(plaintext[i]) ? 'A' : 'a';
            ciphertext[i] = ((plaintext[i] - base + shift) % ALPHABET_SIZE) + base;
        } else {
            ciphertext[i] = plaintext[i];
        }
    }
    ciphertext[text_len] = '\0';
    return ciphertext;
}

char *decrypt(char *ciphertext, int *key, int key_len) {
    int text_len = strlen(ciphertext);
    char *plaintext = (char *)malloc((text_len + 1) * sizeof(char));

    for (int i = 0; i < text_len; i++) {
        if (isalpha(ciphertext[i])) {
            int shift = key[i % key_len];
            char base = isupper(ciphertext[i]) ? 'A' : 'a';
            plaintext[i] = ((ciphertext[i] - base - shift + ALPHABET_SIZE) % ALPHABET_SIZE) + base;
        } else {
            plaintext[i] = ciphertext[i];
        }
    }
    plaintext[text_len] = '\0';
    return plaintext;
}

int main() {
    char plaintext[] = "sendmoremoney";
    int key[] = {9, 0, 1, 7, 23, 15, 21, 14, 11, 11, 2, 8, 9};
    int key_len = sizeof(key) / sizeof(key[0]);

    char *ciphertext = encrypt(plaintext, key, key_len);
    printf("Encrypted text: %s\n", ciphertext);

    char *decrypted = decrypt(ciphertext, key, key_len);
    printf("Decrypted text: %s\n", decrypted);

    free(ciphertext);
    free(decrypted);

    return 0;
}
